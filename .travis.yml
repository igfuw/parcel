language: cpp
os: 
    - linux
    - osx
compiler:
    - gcc
    - clang
matrix:
    exclude:
        - os: osx
          compiler: gcc

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ trusty main universe multiverse restricted"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export apt_get_install="apt-get install -t trusty --no-install-recommends -y"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" && $CXX == "clang++" ]]; then sudo $apt_get_install clang; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && $CXX == "g++"     ]]; then sudo $apt_get_install g++  ; fi

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo $apt_get_install libblitz0-dev cmake libboost-python-dev python-numpy python-scipy libthrust-dev python-pytest; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install --no-install-recommends gnuplot-nox python-gnuplot python-tk python-matplotlib; fi 

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then git clone --depth=1 https://github.com/boostorg/odeint.git; fi # get boost odeint > 1.58
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo rm -f /usr/include/boost/numeric/odeint.hpp; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo rm -rf /usr/include/boost/numeric/odeint; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ln -s `pwd`/odeint/include/boost/numeric/odeint.hpp /usr/include/boost/numeric/odeint.hpp; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo ln -s `pwd`/odeint/include/boost/numeric/odeint  /usr/include/boost/numeric/; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install blitz boost-python; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo pip install -U pytest; fi

  - git clone --depth=1 git://github.com/thrust/thrust.git;
  - sudo ln -s `pwd`/thrust/thrust /usr/local/include/thrust;

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo pip install http://prdownloads.sourceforge.net/gnuplot-py/gnuplot-py-1.8.tar.gz?download; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo pip install -U matplotlib; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gnuplot; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export LDFLAGS="$LDFLAGS -L/usr/local/opt/readline/lib" CPPFLAGS="$CPPFLAGS -I/usr/local/opt/readline/include"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew reinstall gcc --with-fortran; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mkdir -p /Users/travis/Library/Python/2.7/lib/python/site-packages; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo 'import sys; sys.path.insert(1, "/usr/local/lib/python2.7/site-packages")' >> /Users/travis/Library/Python/2.7/lib/python/site-packages/homebrew.pth; fi

  # get latest FindBoost.cmake
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget https://raw.githubusercontent.com/Kitware/CMake/master/Modules/FindBoost.cmake; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo mv FindBoost.cmake /usr/local/Cellar/cmake/3.6.2/share/cmake/Modules/; fi
    
script:

  # install libcloudphxx in Debug mode
  - cd ..
  - git clone --depth=1 git://github.com/igfuw/libcloudphxx.git
  - cd libcloudphxx
  - mkdir build
  - cd build
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$CXX" == "clang++" ]]; then cmake -DCMAKE_CXX_COMPILER=/usr/bin/clang++ ../; fi 
                                                              # Travis default is not the packaged one
  # find python paths, taken from https://github.com/breannansmith/scisim/blob/master/.travis.yml
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PY_INC=`python-config --includes | grep -o '\-I[^ ]*' | head -n 1 | cut -c 3-` ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PY_LIB=`python-config --ldflags | grep -o '\-L[^ ]*' | head -n 1 | cut -c 3- | xargs -I % find % -name libpython*.dylib` ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cmake .. -DPYTHON_LIBRARY=${PY_LIB} -DPYTHON_INCLUDE_DIR=${PY_INC}; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cmake                             -DCMAKE_BUILD_TYPE=Debug ..; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug ..; fi
  - make
  - sudo make install
  - cd ../..

  # run parcel tests using Debug mode of libcloudphxx
  - cd parcel
  - mkdir plots/outputs/
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then py.test -v unit_test/; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then py.test -v unit_test_debug/; fi

  # install libcloudphxx in Release mode with asserts on
  - cd ..
  - cd libcloudphxx/build
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cmake                             -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; fi
  - make
  - sudo make install
  - cd ../..

  # run parcel unit tests using Debug mode of libcloudphxx
  - cd parcel
  - py.test -v unit_test/
  - py.test -v long_test/
